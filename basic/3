$("li[title]") -- <li> 요소 중 title 속성이 포함된 요소만 선택 
$("li[title='list']") -- <li> 요소 중 title 속성값이 '리스트'인 요소만 선택 
$("li[href^=http://]") -- <li> 요소 중 href 속성값이 'http://'로 시작하는 요소만 선택 
$("a[href$='.com']") -- <li> 요소 중 href 속성값이 '.com'으로 끝나는 요소만 선택 
$("a[href*='google']") -- <li> 요소 중 href 속성값 중에서 'google'를 포함하는 요소만 선택 
$("li:hidden") -- <li> 요소 중 숨겨져 있는 것만 선택 
$("li:visible") -- <li> 요소 중 보이는 것만 선택 
$(":text") -- <input> 요소 중 type 속성값이 "text"인 요소만 선택 
$(":selected") -- selected 속성이 적용된 요소만 선택 
$(":checked") -- checked 속성이 적용된 요소만 선택 

$("li:contains('text2')") --<li> 요소 중 'text2'라는 텍스트를 포함하는 요소만 선택 
$("p").contents() --선택한 요소의 하위 요소 중 가장 가까운 하위 요소를 선택
$("li:has('span')") -- <li> 요소 중 <span>을 포함하는 요소만 선택 
$(li).has('span')
$("li:not(:first)") --<li> 요소 중 첫 번째 요소만 제외하고 선택 
$("li")
$("li").filter(".list2") -- <li> 요소 중 class 속성값이 "list2"인 요소만 선택 
$("li").find("strong") --<li> 요소에 하위 요소인 <strong>만 선택 
$("strong").closet("div") --<strong>을 감싸는 상위 <div> 요소 중 가장 가까운 상위 요소를 선택 
$("li").children("a").end() --필터링이 일어나기 이전의 요소인 <li> 가 선택 

$("li").is(".visible") --선택한 <li> 요소가 보이면 true를 반환 
var m = $.noConfilct(); --$.noConfilct()를 사용하면 "$" 메소드를 변수에 참조시켜 "$" 문자 대신 임의의 문자를지정하여 사용할 수 있음
m("h1").width(100);
$("li").get(0).style.color="red"; --제이쿼리로 선택한 요소에 get(0) 메서드를 적용하면 자바스크립트에 DOM 선택자로 선택한 태그로 인식되어 이전 자바스크립트에 DOM 방식을 따른다 
$("li").each(function(){}); --선택한 요소들을 각각 순차적으로 접근해 선택해 온다
$.each($("li"),funcation(){});
배열 객체.map(함수) --배열 데이터를 변환시켜 다시 새로운 배열 객체를  
